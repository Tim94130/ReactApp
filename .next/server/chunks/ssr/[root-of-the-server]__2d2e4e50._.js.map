{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/timot/Documents/BACHELOR-3-DEV/REACT/projet-tvmaze/src/app/components/EpisodeList.jsx"],"sourcesContent":["'use client'\r\nimport { ChevronDown } from 'lucide-react'\r\nimport parse from 'html-react-parser'\r\n\r\nexport default function EpisodeList({ seasonNumber, episodes }) {\r\n  // **Deduplicate by episode.id**\r\n  const uniqueEpisodes = episodes.filter(\r\n    (ep, idx, arr) => arr.findIndex(e => e.id === ep.id) === idx\r\n  )\r\n\r\n  return (\r\n    <details className=\"group mb-6\">\r\n      <summary className=\"cursor-pointer flex items-center justify-between text-xl font-semibold text-sky-600 mb-2\">\r\n        Saison {seasonNumber}\r\n        <ChevronDown className=\"ml-2 h-5 w-5 transition-transform group-open:rotate-180\" />\r\n      </summary>\r\n      <ul className=\"space-y-2 pl-2\">\r\n        {uniqueEpisodes.map(ep => (\r\n          <li\r\n            key={ep.id}\r\n            className=\"border rounded p-3 bg-gray-50 hover:bg-gray-100 transition\"\r\n          >\r\n            <details className=\"group\">\r\n              <summary className=\"cursor-pointer flex items-center justify-between text-sky-500 font-medium\">\r\n                <span>\r\n                  Épisode {ep.number} : {ep.name}\r\n                </span>\r\n                <ChevronDown className=\"ml-2 h-4 w-4 transition-transform group-open:rotate-180\" />\r\n              </summary>\r\n              <div className=\"text-sm text-gray-700 mt-2\">\r\n                {parse(ep.summary || 'Pas de résumé disponible.')}\r\n              </div>\r\n            </details>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </details>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAFA;;;;AAIe,SAAS,YAAY,EAAE,YAAY,EAAE,QAAQ,EAAE;IAC5D,gCAAgC;IAChC,MAAM,iBAAiB,SAAS,MAAM,CACpC,CAAC,IAAI,KAAK,MAAQ,IAAI,SAAS,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,GAAG,EAAE,MAAM;IAG3D,qBACE,8OAAC;QAAQ,WAAU;;0BACjB,8OAAC;gBAAQ,WAAU;;oBAA2F;oBACpG;kCACR,8OAAC,oNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;;;;;;;0BAEzB,8OAAC;gBAAG,WAAU;0BACX,eAAe,GAAG,CAAC,CAAA,mBAClB,8OAAC;wBAEC,WAAU;kCAEV,cAAA,8OAAC;4BAAQ,WAAU;;8CACjB,8OAAC;oCAAQ,WAAU;;sDACjB,8OAAC;;gDAAK;gDACK,GAAG,MAAM;gDAAC;gDAAI,GAAG,IAAI;;;;;;;sDAEhC,8OAAC,oNAAA,CAAA,cAAW;4CAAC,WAAU;;;;;;;;;;;;8CAEzB,8OAAC;oCAAI,WAAU;8CACZ,CAAA,GAAA,wKAAA,CAAA,UAAK,AAAD,EAAE,GAAG,OAAO,IAAI;;;;;;;;;;;;uBAXpB,GAAG,EAAE;;;;;;;;;;;;;;;;AAmBtB","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/timot/Documents/BACHELOR-3-DEV/REACT/projet-tvmaze/src/app/components/ActorList.jsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState } from 'react'\r\nimport Link from 'next/link'\r\n\r\nexport default function ActorList({ cast }) {\r\n  const [visibleCount, setVisibleCount] = useState(6)\r\n\r\n  // 1) On déduplique le cast par person.id\r\n  const uniqueCast = cast.reduce((acc, entry) => {\r\n    if (!acc.find(e => e.person.id === entry.person.id)) {\r\n      acc.push(entry)\r\n    }\r\n    return acc\r\n  }, [])\r\n\r\n  // 2) On ne garde que les visibleCount premiers\r\n  const displayed = uniqueCast.slice(0, visibleCount)\r\n  const loadMore = () => setVisibleCount(v => v + 6)\r\n\r\n  return (\r\n    <div className=\"mt-12\">\r\n      <h2 className=\"text-2xl font-bold mb-4 text-sky-700\">\r\n        Acteurs & personnages\r\n      </h2>\r\n\r\n      <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n        {displayed.map((entry) => (\r\n          <Link\r\n            key={entry.person.id}\r\n            href={`/actors/${entry.person.id}`}\r\n            className=\"bg-white shadow rounded p-3 text-center hover:shadow-lg transition\"\r\n          >\r\n            <img\r\n              src={\r\n                entry.person.image?.medium ||\r\n                entry.character.image?.medium ||\r\n                '/default.jpg'\r\n              }\r\n              alt={entry.person.name}\r\n              className=\"w-24 h-24 mx-auto object-cover rounded-full mb-2\"\r\n            />\r\n            <p className=\"font-semibold\">{entry.person.name}</p>\r\n            <p className=\"text-sm text-gray-500\">\r\n              en tant que {entry.character.name}\r\n            </p>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n\r\n      {visibleCount < uniqueCast.length && (\r\n        <div className=\"text-center mt-6\">\r\n          <button\r\n            onClick={loadMore}\r\n            className=\"bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700\"\r\n          >\r\n            Voir plus d’acteurs\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS,UAAU,EAAE,IAAI,EAAE;IACxC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,yCAAyC;IACzC,MAAM,aAAa,KAAK,MAAM,CAAC,CAAC,KAAK;QACnC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAA,IAAK,EAAE,MAAM,CAAC,EAAE,KAAK,MAAM,MAAM,CAAC,EAAE,GAAG;YACnD,IAAI,IAAI,CAAC;QACX;QACA,OAAO;IACT,GAAG,EAAE;IAEL,+CAA+C;IAC/C,MAAM,YAAY,WAAW,KAAK,CAAC,GAAG;IACtC,MAAM,WAAW,IAAM,gBAAgB,CAAA,IAAK,IAAI;IAEhD,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAuC;;;;;;0BAIrD,8OAAC;gBAAI,WAAU;0BACZ,UAAU,GAAG,CAAC,CAAC,sBACd,8OAAC,4JAAA,CAAA,UAAI;wBAEH,MAAM,CAAC,QAAQ,EAAE,MAAM,MAAM,CAAC,EAAE,EAAE;wBAClC,WAAU;;0CAEV,8OAAC;gCACC,KACE,MAAM,MAAM,CAAC,KAAK,EAAE,UACpB,MAAM,SAAS,CAAC,KAAK,EAAE,UACvB;gCAEF,KAAK,MAAM,MAAM,CAAC,IAAI;gCACtB,WAAU;;;;;;0CAEZ,8OAAC;gCAAE,WAAU;0CAAiB,MAAM,MAAM,CAAC,IAAI;;;;;;0CAC/C,8OAAC;gCAAE,WAAU;;oCAAwB;oCACtB,MAAM,SAAS,CAAC,IAAI;;;;;;;;uBAf9B,MAAM,MAAM,CAAC,EAAE;;;;;;;;;;YAqBzB,eAAe,WAAW,MAAM,kBAC/B,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;;;;;;;AAOX","debugId":null}}]
}