{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/timot/Documents/BACHELOR-3-DEV/REACT/projet-tvmaze/src/app/components/EpisodeList.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/EpisodeList.jsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/EpisodeList.jsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/timot/Documents/BACHELOR-3-DEV/REACT/projet-tvmaze/src/app/components/EpisodeList.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/EpisodeList.jsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/EpisodeList.jsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/timot/Documents/BACHELOR-3-DEV/REACT/projet-tvmaze/src/app/series/%5Bid%5D/page.tsx"],"sourcesContent":["// src/app/series/[id]/page.tsx\nimport EpisodeList from '@/app/components/EpisodeList'\nimport parse from 'html-react-parser'\n\ninterface SeriesPageProps {\n  params: {\n    id: string\n  }\n}\n\ninterface Show {\n  id: number\n  name: string\n  image: { medium: string; original: string } | null\n  summary: string\n  genres: string[]\n  premiered: string\n  rating: { average: number | null }\n}\n\ninterface Season {\n  id: number\n  number: number\n}\n\ninterface Episode {\n  id: number\n  name: string\n  number: number\n  summary: string\n  season: number\n}\n\ninterface CastEntry {\n  person: {\n    name: string\n    image?: { medium: string; original: string }\n  }\n  character: {\n    name: string\n    image?: { medium: string; original: string }\n  }\n}\n\nasync function getShowDetails(id: string): Promise<Show> {\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`, {\n    cache: 'no-store',\n  })\n  if (!res.ok) throw new Error('Erreur lors du chargement de la série')\n  return res.json()\n}\n\nasync function getSeasons(showId: string): Promise<Season[]> {\n  const res = await fetch(`https://api.tvmaze.com/shows/${showId}/seasons`, {\n    cache: 'no-store',\n  })\n  return res.json()\n}\n\nasync function getEpisodes(seasonId: number): Promise<Episode[]> {\n  const res = await fetch(`https://api.tvmaze.com/seasons/${seasonId}/episodes`, {\n    cache: 'no-store',\n  })\n  return res.json()\n}\n\nasync function getCast(showId: string): Promise<CastEntry[]> {\n  const res = await fetch(`https://api.tvmaze.com/shows/${showId}/cast`, {\n    cache: 'no-store',\n  })\n  return res.json()\n}\n\nexport default async function SeriesPage({ params }: SeriesPageProps) {\n  const { id } = params\n\n  // données principales\n  const show = await getShowDetails(id)\n  const seasons = await getSeasons(id)\n  const cast = await getCast(id)\n\n  // épisodes groupés par saison\n  const episodesBySeason = await Promise.all(\n    seasons.map(async (season) => {\n      const episodes = await getEpisodes(season.id)\n      return {\n        seasonNumber: season.number,\n        episodes,\n      }\n    })\n  )\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6\">\n      <h1 className=\"text-3xl font-bold mb-4 text-sky-800\">{show.name}</h1>\n\n      {show.image && (\n        <img\n          src={show.image.original}\n          alt={show.name}\n          className=\"w-full h-auto rounded shadow mb-4\"\n        />\n      )}\n\n      <div className=\"text-gray-700 mb-4\">{parse(show.summary || '')}</div>\n\n      <p className=\"text-sm text-gray-600\">\n        <strong>Genres :</strong> {show.genres.join(', ') || 'N/A'}\n      </p>\n      <p className=\"text-sm text-gray-600\">\n        <strong>Première diffusion :</strong> {show.premiered || 'N/A'}\n      </p>\n      <p className=\"text-sm text-gray-600 mb-8\">\n        <strong>Note :</strong> {show.rating.average ?? 'Non notée'}\n      </p>\n\n      <h2 className=\"text-2xl font-bold mb-4 text-sky-700\">Saisons & épisodes</h2>\n      {episodesBySeason.map(({ seasonNumber, episodes }) => (\n        <EpisodeList\n          key={seasonNumber}\n          seasonNumber={seasonNumber}\n          episodes={episodes}\n        />\n      ))}\n\n      <h2 className=\"text-2xl font-bold mt-12 mb-4 text-sky-700\">\n        Acteurs & personnages\n      </h2>\n      <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-3 gap-4\">\n        {cast.slice(0, 6).map((entry, idx) => (\n          <div key={idx} className=\"bg-white shadow rounded p-3 text-center\">\n            <img\n              src={\n                entry.person.image?.medium ||\n                entry.character.image?.medium ||\n                '/default.jpg'\n              }\n              alt={entry.person.name}\n              className=\"w-24 h-24 mx-auto object-cover rounded-full mb-2\"\n            />\n            <p className=\"font-semibold\">{entry.person.name}</p>\n            <p className=\"text-sm text-gray-500\">\n              en tant que {entry.character.name}\n            </p>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;;AAC/B;AACA;AAAA;;;;AA0CA,eAAe,eAAe,EAAU;IACtC,MAAM,MAAM,MAAM,MAAM,CAAC,6BAA6B,EAAE,IAAI,EAAE;QAC5D,OAAO;IACT;IACA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,IAAI,IAAI;AACjB;AAEA,eAAe,WAAW,MAAc;IACtC,MAAM,MAAM,MAAM,MAAM,CAAC,6BAA6B,EAAE,OAAO,QAAQ,CAAC,EAAE;QACxE,OAAO;IACT;IACA,OAAO,IAAI,IAAI;AACjB;AAEA,eAAe,YAAY,QAAgB;IACzC,MAAM,MAAM,MAAM,MAAM,CAAC,+BAA+B,EAAE,SAAS,SAAS,CAAC,EAAE;QAC7E,OAAO;IACT;IACA,OAAO,IAAI,IAAI;AACjB;AAEA,eAAe,QAAQ,MAAc;IACnC,MAAM,MAAM,MAAM,MAAM,CAAC,6BAA6B,EAAE,OAAO,KAAK,CAAC,EAAE;QACrE,OAAO;IACT;IACA,OAAO,IAAI,IAAI;AACjB;AAEe,eAAe,WAAW,EAAE,MAAM,EAAmB;IAClE,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,sBAAsB;IACtB,MAAM,OAAO,MAAM,eAAe;IAClC,MAAM,UAAU,MAAM,WAAW;IACjC,MAAM,OAAO,MAAM,QAAQ;IAE3B,8BAA8B;IAC9B,MAAM,mBAAmB,MAAM,QAAQ,GAAG,CACxC,QAAQ,GAAG,CAAC,OAAO;QACjB,MAAM,WAAW,MAAM,YAAY,OAAO,EAAE;QAC5C,OAAO;YACL,cAAc,OAAO,MAAM;YAC3B;QACF;IACF;IAGF,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAwC,KAAK,IAAI;;;;;;YAE9D,KAAK,KAAK,kBACT,8OAAC;gBACC,KAAK,KAAK,KAAK,CAAC,QAAQ;gBACxB,KAAK,KAAK,IAAI;gBACd,WAAU;;;;;;0BAId,8OAAC;gBAAI,WAAU;0BAAsB,CAAA,GAAA,wKAAA,CAAA,UAAK,AAAD,EAAE,KAAK,OAAO,IAAI;;;;;;0BAE3D,8OAAC;gBAAE,WAAU;;kCACX,8OAAC;kCAAO;;;;;;oBAAiB;oBAAE,KAAK,MAAM,CAAC,IAAI,CAAC,SAAS;;;;;;;0BAEvD,8OAAC;gBAAE,WAAU;;kCACX,8OAAC;kCAAO;;;;;;oBAA6B;oBAAE,KAAK,SAAS,IAAI;;;;;;;0BAE3D,8OAAC;gBAAE,WAAU;;kCACX,8OAAC;kCAAO;;;;;;oBAAe;oBAAE,KAAK,MAAM,CAAC,OAAO,IAAI;;;;;;;0BAGlD,8OAAC;gBAAG,WAAU;0BAAuC;;;;;;YACpD,iBAAiB,GAAG,CAAC,CAAC,EAAE,YAAY,EAAE,QAAQ,EAAE,iBAC/C,8OAAC,wIAAA,CAAA,UAAW;oBAEV,cAAc;oBACd,UAAU;mBAFL;;;;;0BAMT,8OAAC;gBAAG,WAAU;0BAA6C;;;;;;0BAG3D,8OAAC;gBAAI,WAAU;0BACZ,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,OAAO,oBAC5B,8OAAC;wBAAc,WAAU;;0CACvB,8OAAC;gCACC,KACE,MAAM,MAAM,CAAC,KAAK,EAAE,UACpB,MAAM,SAAS,CAAC,KAAK,EAAE,UACvB;gCAEF,KAAK,MAAM,MAAM,CAAC,IAAI;gCACtB,WAAU;;;;;;0CAEZ,8OAAC;gCAAE,WAAU;0CAAiB,MAAM,MAAM,CAAC,IAAI;;;;;;0CAC/C,8OAAC;gCAAE,WAAU;;oCAAwB;oCACtB,MAAM,SAAS,CAAC,IAAI;;;;;;;;uBAZ3B;;;;;;;;;;;;;;;;AAmBpB","debugId":null}}]
}